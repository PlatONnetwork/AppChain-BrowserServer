<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.Token1155HolderMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.Token1155Holder">
    <id column="token_address" jdbcType="VARCHAR" property="tokenAddress" />
    <id column="token_id" jdbcType="VARCHAR" property="tokenId" />
    <id column="address" jdbcType="VARCHAR" property="address" />
    <result column="balance" jdbcType="VARCHAR" property="balance" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="token_tx_qty" jdbcType="INTEGER" property="tokenTxQty" />
    <result column="token_owner_tx_qty" jdbcType="INTEGER" property="tokenOwnerTxQty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    token_address, token_id, address, balance, create_time, update_time, token_tx_qty, 
    token_owner_tx_qty
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.Token1155HolderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from token_1155_holder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.platon.browser.dao.entity.Token1155HolderKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from token_1155_holder
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=VARCHAR}
      and address = #{address,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.platon.browser.dao.entity.Token1155HolderKey">
    delete from token_1155_holder
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=VARCHAR}
      and address = #{address,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.Token1155HolderExample">
    delete from token_1155_holder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.Token1155Holder">
    insert into token_1155_holder (token_address, token_id, address, 
      balance, create_time, update_time, 
      token_tx_qty, token_owner_tx_qty)
    values (#{tokenAddress,jdbcType=VARCHAR}, #{tokenId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{balance,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{tokenTxQty,jdbcType=INTEGER}, #{tokenOwnerTxQty,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.platon.browser.dao.entity.Token1155Holder">
    insert into token_1155_holder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tokenAddress != null">
        token_address,
      </if>
      <if test="tokenId != null">
        token_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tokenTxQty != null">
        token_tx_qty,
      </if>
      <if test="tokenOwnerTxQty != null">
        token_owner_tx_qty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tokenAddress != null">
        #{tokenAddress,jdbcType=VARCHAR},
      </if>
      <if test="tokenId != null">
        #{tokenId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenTxQty != null">
        #{tokenTxQty,jdbcType=INTEGER},
      </if>
      <if test="tokenOwnerTxQty != null">
        #{tokenOwnerTxQty,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platon.browser.dao.entity.Token1155HolderExample" resultType="java.lang.Long">
    select count(*) from token_1155_holder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update token_1155_holder
    <set>
      <if test="record.tokenAddress != null">
        token_address = #{record.tokenAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.tokenId != null">
        token_id = #{record.tokenId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tokenTxQty != null">
        token_tx_qty = #{record.tokenTxQty,jdbcType=INTEGER},
      </if>
      <if test="record.tokenOwnerTxQty != null">
        token_owner_tx_qty = #{record.tokenOwnerTxQty,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update token_1155_holder
    set token_address = #{record.tokenAddress,jdbcType=VARCHAR},
      token_id = #{record.tokenId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      token_tx_qty = #{record.tokenTxQty,jdbcType=INTEGER},
      token_owner_tx_qty = #{record.tokenOwnerTxQty,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.Token1155Holder">
    update token_1155_holder
    <set>
      <if test="balance != null">
        balance = #{balance,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenTxQty != null">
        token_tx_qty = #{tokenTxQty,jdbcType=INTEGER},
      </if>
      <if test="tokenOwnerTxQty != null">
        token_owner_tx_qty = #{tokenOwnerTxQty,jdbcType=INTEGER},
      </if>
    </set>
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=VARCHAR}
      and address = #{address,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.Token1155Holder">
    update token_1155_holder
    set balance = #{balance,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      token_tx_qty = #{tokenTxQty,jdbcType=INTEGER},
      token_owner_tx_qty = #{tokenOwnerTxQty,jdbcType=INTEGER}
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
      and token_id = #{tokenId,jdbcType=VARCHAR}
      and address = #{address,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into token_1155_holder
    (token_address, token_id, address, balance, create_time, update_time, token_tx_qty, 
      token_owner_tx_qty)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.tokenAddress,jdbcType=VARCHAR}, #{item.tokenId,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, 
        #{item.balance,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.tokenTxQty,jdbcType=INTEGER}, #{item.tokenOwnerTxQty,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into token_1155_holder (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'token_address'.toString() == column.value">
          #{item.tokenAddress,jdbcType=VARCHAR}
        </if>
        <if test="'token_id'.toString() == column.value">
          #{item.tokenId,jdbcType=VARCHAR}
        </if>
        <if test="'address'.toString() == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'balance'.toString() == column.value">
          #{item.balance,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'token_tx_qty'.toString() == column.value">
          #{item.tokenTxQty,jdbcType=INTEGER}
        </if>
        <if test="'token_owner_tx_qty'.toString() == column.value">
          #{item.tokenOwnerTxQty,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>