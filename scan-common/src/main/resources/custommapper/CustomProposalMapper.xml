<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.custommapper.CustomProposalMapper">
    <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.Proposal" extends="com.platon.browser.dao.mapper.ProposalMapper.BaseResultMap"/>

    <resultMap id="VoteProposalResultMap" type="com.platon.browser.dao.entity.Proposal" >
        <result column="end_voting_block" jdbcType="VARCHAR" property="endVotingBlock" />
    </resultMap>
    <update id="updateProposalBasicInfo">
        <foreach collection="list" item="item" separator=";">
            update `proposal` set
            `topic`= #{item.topic},
            `description`= #{item.description},
            `canceled_topic`=#{item.canceledTopic},
            `completion_flag`=#{item.completionFlag}
            where `hash` = #{item.hash}
        </foreach>
    </update>

    <update id="updateProposalTallyInfo" >
        <foreach collection="list" item="item" separator=";">
            update `proposal` set `accu_verifiers` = #{item.accuVerifiers}, yeas = #{item.yeas}, nays = #{item.nays}, abstentions = #{item.abstentions}, `status` = #{item.status}
            where `hash` = #{item.hash}
        </foreach>
    </update>

    <select id="selectVotingProposal" resultMap="VoteProposalResultMap">
    select p.end_voting_block
    from vote v left join proposal p on v.proposal_hash = p.hash
    where  p.`status` = 1 and v.node_id = #{nodeId,jdbcType=VARCHAR}
  	</select>


    <select id="listUnfinished" resultMap="BaseResultMap">
        select hash, type, end_voting_block, active_block, yeas, nays, abstentions, accu_verifiers, status
        from `proposal`
        where (type=2 and status in (1, 2, 4)) or (type!=2 and status = 1)
    </select>
</mapper>
